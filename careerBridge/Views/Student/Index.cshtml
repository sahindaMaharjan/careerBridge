@model List<careerBridge.Models.ExternalJobViewModel>
@using Microsoft.AspNetCore.Identity
@using careerBridge.Areas.Identity.Data
@inject UserManager<careerBridgeUser> UserManager
@inject SignInManager<careerBridgeUser> SignInManager

@{
    ViewData["Title"] = "Student Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var currentUser = await UserManager.GetUserAsync(User);
    var username = currentUser?.Fullname ?? "Student";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />

<style>
    body {
        font-family: 'Segoe UI', sans-serif;
        background: #f9fbfd;
    }

    .card {
        border-radius: 20px;
        box-shadow: 0 6px 24px rgba(0, 0, 0, 0.06);
        background-color: #ffffff;
    }

    .card-body {
        padding: 2rem 1.5rem;
    }

    .card h5 {
        font-weight: 600;
    }

    .display-6 {
        font-size: 2rem;
        font-weight: 700;
        color: #333;
    }

    .btn {
        border-radius: 30px;
        font-weight: 600;
        padding: 0.6rem 1.4rem;
    }

    .btn-primary {
        background-color: #007bff;
        border: none;
    }

    h3 {
        color: #1a1a1a;
        margin-top: 2rem;
        font-weight: 600;
    }

    .list-group-item {
        border: none;
        background-color: #fff;
        border-bottom: 1px solid #e9ecef;
    }
</style>

<div class="container mt-5">
    <h2 class="text-center text-success mb-4">Welcome, @username!</h2>

    <!-- Stats Cards -->
    <div class="row mb-4 text-white">
        <div class="col-md-4">
            <div class="card text-center">
                <div class="card-body">
                    <i class="bi bi-send-check-fill fs-2 text-primary"></i>
                    <h5 class="card-title mt-2">Jobs Applied</h5>
                    <p class="display-6">@ViewBag.AppliedJobCount</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-center">
                <div class="card-body">
                    <i class="bi bi-chat-left-dots-fill fs-2 text-secondary"></i>
                    <h5 class="card-title mt-2">Chats</h5>
                    <p class="display-6">@ViewBag.ChatCount</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-center">
                <div class="card-body">
                    <i class="bi bi-calendar-check-fill fs-2 text-warning"></i>
                    <h5 class="card-title mt-2">Events Registered</h5>
                    <p class="display-6">@ViewBag.EventRegisteredCount</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Navigation Buttons -->
    <div class="mb-4 text-center">
        <a asp-controller="Student" asp-action="Events" class="btn btn-primary me-2">
            View Upcoming Events
        </a>
        <a asp-action="JobList" asp-controller="Student" class="btn btn-outline-secondary me-2">
            <i class="bi bi-briefcase-fill me-1"></i> Employer-Posted Jobs
        </a>
        <a asp-action="AvailableSessions" asp-controller="Student" class="btn btn-outline-success me-2">
            <i class="bi bi-people-fill me-1"></i> Mentor Sessions
        </a>
        <a asp-action="MyRegistrations" asp-controller="Student" class="btn btn-outline-warning">
            <i class="bi bi-list-check me-1"></i> My Session Requests
        </a>
    </div>

    <!-- Flash messages -->
    @if (TempData["Message"] != null)
    {
        <div class="alert alert-success">@TempData["Message"]</div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-warning">@TempData["Error"]</div>
    }

    <!-- External Job Search -->
    <div class="card mb-5">
        <div class="card-header bg-primary text-white">
            Search External Jobs
        </div>
        <div class="card-body">
            <form method="get" asp-action="Index" class="row g-3">
                <div class="col-md-4">
                    <input type="text" name="searchQuery" class="form-control" placeholder="e.g. software engineer"
                           value="@Context.Request.Query["searchQuery"]" />
                </div>
                <div class="col-md-3">
                    <input type="text" name="location" class="form-control" placeholder="Location"
                           value="@Context.Request.Query["location"]" />
                </div>
                <div class="col-md-2">
                    <input type="number" name="minSalary" class="form-control" placeholder="Min Salary" />
                </div>
                <div class="col-md-2">
                    <select name="posted" class="form-select">
                        <option value="">Any time</option>
                        <option value="1">Past 24h</option>
                        <option value="3">Past 3d</option>
                        <option value="7">Past week</option>
                    </select>
                </div>
                <div class="col-md-1">
                    <button type="submit" class="btn btn-light w-100">
                        <i class="bi bi-search"></i>
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- External Job Results -->
    @if (Model?.Any() == true)
    {
        <h3>External Job Results</h3>
        <ul class="list-group mb-5">
            @foreach (var job in Model)
            {
                <li class="list-group-item">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <h5>@job.Title</h5>
                            <p><strong>@job.CompanyName</strong> — @job.Location</p>
                            <p class="mb-1"><small>Category: @job.Category</small></p>
                            <p class="mb-1">
                                @job.Description.Substring(0, Math.Min(150, job.Description.Length))...
                                <a href="#" onclick="toggleDescription(this); return false;">Read more</a>
                            </p>
                            <p class="full-description d-none">@job.Description</p>
                        </div>
                        <form asp-action="Apply" asp-controller="Student" method="post" class="ms-3">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="jobTitle" value="@job.Title" />
                            <input type="hidden" name="company" value="@job.CompanyName" />
                            <button type="submit" class="btn btn-sm btn-success">Apply</button>
                        </form>
                    </div>
                </li>
            }
        </ul>
    }
    else if (!string.IsNullOrEmpty(Context.Request.Query["searchQuery"]))
    {
        <p>No jobs found for “@Context.Request.Query["searchQuery"]”.</p>
    }
</div>

<script>
    function toggleDescription(link) {
        var full = link.closest('div').querySelector('.full-description');
        full.classList.toggle('d-none');
        link.remove();
    }
</script>
