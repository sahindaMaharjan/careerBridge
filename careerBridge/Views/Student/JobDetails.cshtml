@model careerBridge.Models.JobListing
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using careerBridge.Areas.Identity.Data
@using Microsoft.AspNetCore.Identity
@inject UserManager<careerBridgeUser> UserManager
@inject SignInManager<careerBridgeUser> SignInManager

@{
    ViewData["Title"] = Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";

    var isStudent = SignInManager.IsSignedIn(User) && User.IsInRole("Student");
}

<div class="card mt-4 shadow-sm">
    <div class="card-header bg-dark text-white">
        <h4 class="mb-0">@Model.Title</h4>
    </div>
    <div class="card-body">

        <div class="mb-2"><strong>Description:</strong> @(string.IsNullOrWhiteSpace(Model.Description) ? "No description provided." : Model.Description)</div>
        <div class="mb-2"><strong>Salary:</strong> @(Model.Salary.HasValue? Model.Salary.Value.ToString("C") : "—")</div>
        <div class="mb-2"><strong>Location:</strong> @Model.Location</div>
        <div class="mb-2"><strong>Posted On:</strong> @Model.PostedOn.ToString("MMMM dd, yyyy")</div>
        <div class="mb-2">
            <strong>Status:</strong>
            @if (Model.IsOpen)
            {
                <span class="badge bg-success">Open</span>
            }
            else
            {
                <span class="badge bg-danger">Closed</span>
            }
        </div>

        <div class="mt-4">
            @if (isStudent)
            {
                if (Model.IsOpen)
                {
                    <a asp-action="Apply" asp-route-id="@Model.JobListingID" class="btn btn-success">Apply for this Job</a>
                }
                else
                {
                    <div class="alert alert-warning d-inline-block">This job is currently closed for applications.</div>
                }
            }

            <a asp-action="JobList" class="btn btn-secondary ms-2">Back</a>
        </div>
    </div>
</div>
